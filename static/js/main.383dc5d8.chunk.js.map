{"version":3,"sources":["components/Card.js","components/Content.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","character","image","name","className","onClick","src","alt","Content","cards","data","map","index","e","setModalContent","Modal","useEffect","modalContainer","document","getElementById","handleClose","target","closeModal","addEventListener","removeEventListener","id","children","App","useState","currentPage","setCurrentPage","prev","next","pagination","setPagination","characterData","setCharacterData","showModal","setShowModal","handleKeyup","keyCode","currentCharacter","setCurrentCharacter","fetch","then","response","json","info","results","window","Fragment","gender","episode","length","location","origin","species","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.383dc5d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n  const { image, name } = props.character;\r\n\r\n  return (\r\n    <div className=\"card\" onClick={props.onClick}>\r\n      <div className=\"image-container\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={image} alt={image} />\r\n        </div>\r\n      </div>\r\n      <div className=\"card-title-container\">\r\n        <div className=\"card-title-wrapper\">\r\n          <h2 className=\"card-title\">{name}</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  character: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Card from './Card.js';\r\n\r\nimport './Content.css';\r\n\r\nfunction Content(props) {\r\n  const cards = props.data.map((character, index) => (\r\n    <Card\r\n      character={character}\r\n      key={index}\r\n      onClick={(e) => {\r\n        props.setModalContent(character);\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return <div className=\"content-wrapper\">{cards}</div>;\r\n}\r\n\r\nContent.propTypes = {\r\n  data: PropTypes.array,\r\n  setModalContent: PropTypes.func,\r\n};\r\n\r\nexport default Content;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\n\r\nfunction Modal(props) {\r\n  useEffect(() => {\r\n    const modalContainer = document.getElementById('modal-container');\r\n    const handleClose = (e) => {\r\n      if (e.target === modalContainer) {\r\n        props.closeModal();\r\n      }\r\n    };\r\n    modalContainer.addEventListener('click', handleClose);\r\n    return () => modalContainer.removeEventListener('click', handleClose);\r\n  });\r\n  return (\r\n    <div id=\"modal-container\" className=\"modal\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  closeModal: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Content from './components/Content.js';\nimport Modal from './components/Modal.js';\n\nconst URL = 'https://rickandmortyapi.com/api/';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(`${URL}character/`);\n  const [pagination, setPagination] = useState({\n    prev: null,\n    next: null,\n  });\n  const [characterData, setCharacterData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const handleKeyup = (e) => e.keyCode === 27 && setShowModal(false);\n  const [currentCharacter, setCurrentCharacter] = useState(false);\n  const setModalContent = (character) => {\n    setCurrentCharacter(character);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  useEffect(() => {\n    fetch(currentPage)\n      .then((response) => response.json())\n      .then((data) => {\n        setPagination({\n          prev: data.info.prev,\n          next: data.info.next,\n        });\n        setCharacterData(data.results);\n      });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (showModal) window.addEventListener('keyup', handleKeyup);\n    return () => window.removeEventListener('keyup', handleKeyup);\n  });\n\n  const nextPage = () => {\n    if (pagination.next != null) {\n      setCurrentPage(pagination.next);\n    }\n  };\n  const prevPage = () => {\n    if (pagination.prev != null) {\n      setCurrentPage(pagination.prev);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <header>\n        <div className=\"title-wrapper\">\n          <h1 className=\"title\">Rick and Morty Character-pedia</h1>\n        </div>\n      </header>\n\n      <section className=\"content\">\n        <div className=\"card-display-container\">\n          <div className=\"card-display-wrapper\">\n            <Content data={characterData} setModalContent={setModalContent} />\n          </div>\n        </div>\n        <div className=\"pagination-container\">\n          <div className=\"pagination-wrapper\">\n            <button\n              className=\"pagination-btn left-pagination-btn\"\n              onClick={(e) => {\n                prevPage();\n              }}>\n              &#8592;\n            </button>\n            <button\n              className=\"pagination-btn right-pagination-btn\"\n              onClick={(e) => {\n                nextPage();\n              }}>\n              &#8594;\n            </button>\n          </div>\n        </div>\n      </section>\n\n      {showModal && (\n        <Modal closeModal={closeModal}>\n          <div className=\"modal-content-container\">\n            <div className=\"modal-content-wrapper\">\n              <div className=\"modal-image-wrapper\">\n                <img\n                  src={currentCharacter.image}\n                  alt={currentCharacter.image}\n                />\n              </div>\n              <div className=\"modal-description-wrapper\">\n                <h1>{currentCharacter.name}</h1>\n                <ul className=\"modal-description-attributes\">\n                  <li>Gender: {currentCharacter.gender}</li>\n                  <li>Episodes: {currentCharacter.episode.length}</li>\n                  <li>Location: {currentCharacter.location.name}</li>\n                  <li>Origin: {currentCharacter.origin.name}</li>\n                  <li>Species: {currentCharacter.species}</li>\n                  <li>Status: {currentCharacter.status}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}